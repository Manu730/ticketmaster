// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: ticketmaster.proto

package golang

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SectionOrder int32

const (
	SectionOrder_A SectionOrder = 0
	SectionOrder_B SectionOrder = 1
)

// Enum value maps for SectionOrder.
var (
	SectionOrder_name = map[int32]string{
		0: "A",
		1: "B",
	}
	SectionOrder_value = map[string]int32{
		"A": 0,
		"B": 1,
	}
)

func (x SectionOrder) Enum() *SectionOrder {
	p := new(SectionOrder)
	*p = x
	return p
}

func (x SectionOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SectionOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_ticketmaster_proto_enumTypes[0].Descriptor()
}

func (SectionOrder) Type() protoreflect.EnumType {
	return &file_ticketmaster_proto_enumTypes[0]
}

func (x SectionOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SectionOrder.Descriptor instead.
func (SectionOrder) EnumDescriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{0}
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price    float32 `protobuf:"fixed32,1,opt,name=price,proto3" json:"price,omitempty"`
	Currency string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{1}
}

func (x *Price) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Price) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type Trip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source      string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *Trip) Reset() {
	*x = Trip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{2}
}

func (x *Trip) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Trip) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Receipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainNumber int64  `protobuf:"varint,1,opt,name=train_number,json=trainNumber,proto3" json:"train_number,omitempty"`
	FromStation string `protobuf:"bytes,2,opt,name=from_station,json=fromStation,proto3" json:"from_station,omitempty"`
	ToStation   string `protobuf:"bytes,3,opt,name=to_station,json=toStation,proto3" json:"to_station,omitempty"`
	User        *User  `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Cost        *Price `protobuf:"bytes,5,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{4}
}

func (x *Receipt) GetTrainNumber() int64 {
	if x != nil {
		return x.TrainNumber
	}
	return 0
}

func (x *Receipt) GetFromStation() string {
	if x != nil {
		return x.FromStation
	}
	return ""
}

func (x *Receipt) GetToStation() string {
	if x != nil {
		return x.ToStation
	}
	return ""
}

func (x *Receipt) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Receipt) GetCost() *Price {
	if x != nil {
		return x.Cost
	}
	return nil
}

type Seat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNo      int64 `protobuf:"varint,1,opt,name=seat_no,json=seatNo,proto3" json:"seat_no,omitempty"`
	IsAllocated bool  `protobuf:"varint,2,opt,name=is_allocated,json=isAllocated,proto3" json:"is_allocated,omitempty"`
	AllocatedTo *User `protobuf:"bytes,3,opt,name=allocated_to,json=allocatedTo,proto3" json:"allocated_to,omitempty"`
}

func (x *Seat) Reset() {
	*x = Seat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seat) ProtoMessage() {}

func (x *Seat) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seat.ProtoReflect.Descriptor instead.
func (*Seat) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{5}
}

func (x *Seat) GetSeatNo() int64 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *Seat) GetIsAllocated() bool {
	if x != nil {
		return x.IsAllocated
	}
	return false
}

func (x *Seat) GetAllocatedTo() *User {
	if x != nil {
		return x.AllocatedTo
	}
	return nil
}

type Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  SectionOrder `protobuf:"varint,1,opt,name=name,proto3,enum=SectionOrder" json:"name,omitempty"`
	Seats []*Seat      `protobuf:"bytes,2,rep,name=seats,proto3" json:"seats,omitempty"`
}

func (x *Section) Reset() {
	*x = Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Section) ProtoMessage() {}

func (x *Section) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Section.ProtoReflect.Descriptor instead.
func (*Section) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{6}
}

func (x *Section) GetName() SectionOrder {
	if x != nil {
		return x.Name
	}
	return SectionOrder_A
}

func (x *Section) GetSeats() []*Seat {
	if x != nil {
		return x.Seats
	}
	return nil
}

type Train struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number     int64      `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	TripDetail *Trip      `protobuf:"bytes,2,opt,name=trip_detail,json=tripDetail,proto3" json:"trip_detail,omitempty"`
	Sections   []*Section `protobuf:"bytes,3,rep,name=sections,proto3" json:"sections,omitempty"`
}

func (x *Train) Reset() {
	*x = Train{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Train) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Train) ProtoMessage() {}

func (x *Train) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Train.ProtoReflect.Descriptor instead.
func (*Train) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{7}
}

func (x *Train) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Train) GetTripDetail() *Trip {
	if x != nil {
		return x.TripDetail
	}
	return nil
}

func (x *Train) GetSections() []*Section {
	if x != nil {
		return x.Sections
	}
	return nil
}

type BookTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainNumber int64 `protobuf:"varint,1,opt,name=train_number,json=trainNumber,proto3" json:"train_number,omitempty"`
	TripDetail  *Trip `protobuf:"bytes,2,opt,name=trip_detail,json=tripDetail,proto3" json:"trip_detail,omitempty"`
	Traveller   *User `protobuf:"bytes,3,opt,name=traveller,proto3" json:"traveller,omitempty"`
}

func (x *BookTicketOutput) Reset() {
	*x = BookTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookTicketOutput) ProtoMessage() {}

func (x *BookTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookTicketOutput.ProtoReflect.Descriptor instead.
func (*BookTicketOutput) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{8}
}

func (x *BookTicketOutput) GetTrainNumber() int64 {
	if x != nil {
		return x.TrainNumber
	}
	return 0
}

func (x *BookTicketOutput) GetTripDetail() *Trip {
	if x != nil {
		return x.TripDetail
	}
	return nil
}

func (x *BookTicketOutput) GetTraveller() *User {
	if x != nil {
		return x.Traveller
	}
	return nil
}

type UserTrainInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainNumber int64 `protobuf:"varint,1,opt,name=train_number,json=trainNumber,proto3" json:"train_number,omitempty"`
	User        *User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserTrainInput) Reset() {
	*x = UserTrainInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTrainInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTrainInput) ProtoMessage() {}

func (x *UserTrainInput) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTrainInput.ProtoReflect.Descriptor instead.
func (*UserTrainInput) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{9}
}

func (x *UserTrainInput) GetTrainNumber() int64 {
	if x != nil {
		return x.TrainNumber
	}
	return 0
}

func (x *UserTrainInput) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ShowAllocationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainNumber int64        `protobuf:"varint,1,opt,name=train_number,json=trainNumber,proto3" json:"train_number,omitempty"`
	Order       SectionOrder `protobuf:"varint,2,opt,name=order,proto3,enum=SectionOrder" json:"order,omitempty"`
}

func (x *ShowAllocationInput) Reset() {
	*x = ShowAllocationInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowAllocationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowAllocationInput) ProtoMessage() {}

func (x *ShowAllocationInput) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowAllocationInput.ProtoReflect.Descriptor instead.
func (*ShowAllocationInput) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{10}
}

func (x *ShowAllocationInput) GetTrainNumber() int64 {
	if x != nil {
		return x.TrainNumber
	}
	return 0
}

func (x *ShowAllocationInput) GetOrder() SectionOrder {
	if x != nil {
		return x.Order
	}
	return SectionOrder_A
}

type ShowAllocationOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainNumber    int64    `protobuf:"varint,1,opt,name=train_number,json=trainNumber,proto3" json:"train_number,omitempty"`
	SectionDetails *Section `protobuf:"bytes,2,opt,name=section_details,json=sectionDetails,proto3" json:"section_details,omitempty"`
}

func (x *ShowAllocationOutput) Reset() {
	*x = ShowAllocationOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowAllocationOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowAllocationOutput) ProtoMessage() {}

func (x *ShowAllocationOutput) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowAllocationOutput.ProtoReflect.Descriptor instead.
func (*ShowAllocationOutput) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{11}
}

func (x *ShowAllocationOutput) GetTrainNumber() int64 {
	if x != nil {
		return x.TrainNumber
	}
	return 0
}

func (x *ShowAllocationOutput) GetSectionDetails() *Section {
	if x != nil {
		return x.SectionDetails
	}
	return nil
}

type UserAllocModifyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTrainDetails *UserTrainInput `protobuf:"bytes,1,opt,name=user_train_details,json=userTrainDetails,proto3" json:"user_train_details,omitempty"`
	NewSection       SectionOrder    `protobuf:"varint,2,opt,name=new_section,json=newSection,proto3,enum=SectionOrder" json:"new_section,omitempty"`
	NewSeatno        int64           `protobuf:"varint,3,opt,name=new_seatno,json=newSeatno,proto3" json:"new_seatno,omitempty"`
}

func (x *UserAllocModifyInput) Reset() {
	*x = UserAllocModifyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticketmaster_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAllocModifyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAllocModifyInput) ProtoMessage() {}

func (x *UserAllocModifyInput) ProtoReflect() protoreflect.Message {
	mi := &file_ticketmaster_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAllocModifyInput.ProtoReflect.Descriptor instead.
func (*UserAllocModifyInput) Descriptor() ([]byte, []int) {
	return file_ticketmaster_proto_rawDescGZIP(), []int{12}
}

func (x *UserAllocModifyInput) GetUserTrainDetails() *UserTrainInput {
	if x != nil {
		return x.UserTrainDetails
	}
	return nil
}

func (x *UserAllocModifyInput) GetNewSection() SectionOrder {
	if x != nil {
		return x.NewSection
	}
	return SectionOrder_A
}

func (x *UserAllocModifyInput) GetNewSeatno() int64 {
	if x != nil {
		return x.NewSeatno
	}
	return 0
}

var File_ticketmaster_proto protoreflect.FileDescriptor

var file_ticketmaster_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x39, 0x0a,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x40, 0x0a, 0x04, 0x54, 0x72, 0x69, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0xa5, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x04,
	0x53, 0x65, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x28, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x22, 0x49, 0x0a, 0x07, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x73, 0x65, 0x61, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x05,
	0x73, 0x65, 0x61, 0x74, 0x73, 0x22, 0x6d, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x72,
	0x69, 0x70, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24,
	0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0b,
	0x74, 0x72, 0x69, 0x70, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09,
	0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x0e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x5d, 0x0a, 0x13, 0x53, 0x68, 0x6f,
	0x77, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x77,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x3d, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x10, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e,
	0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x65, 0x61, 0x74, 0x6e, 0x6f, 0x2a, 0x1c, 0x0a,
	0x0c, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x05, 0x0a,
	0x01, 0x41, 0x10, 0x00, 0x12, 0x05, 0x0a, 0x01, 0x42, 0x10, 0x01, 0x32, 0x8a, 0x02, 0x0a, 0x0c,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x0a,
	0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x08, 0x2e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x1a, 0x11, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x08, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e,
	0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x06,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ticketmaster_proto_rawDescOnce sync.Once
	file_ticketmaster_proto_rawDescData = file_ticketmaster_proto_rawDesc
)

func file_ticketmaster_proto_rawDescGZIP() []byte {
	file_ticketmaster_proto_rawDescOnce.Do(func() {
		file_ticketmaster_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticketmaster_proto_rawDescData)
	})
	return file_ticketmaster_proto_rawDescData
}

var file_ticketmaster_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ticketmaster_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_ticketmaster_proto_goTypes = []interface{}{
	(SectionOrder)(0),            // 0: SectionOrder
	(*Empty)(nil),                // 1: Empty
	(*Price)(nil),                // 2: Price
	(*Trip)(nil),                 // 3: Trip
	(*User)(nil),                 // 4: User
	(*Receipt)(nil),              // 5: Receipt
	(*Seat)(nil),                 // 6: Seat
	(*Section)(nil),              // 7: Section
	(*Train)(nil),                // 8: Train
	(*BookTicketOutput)(nil),     // 9: BookTicketOutput
	(*UserTrainInput)(nil),       // 10: UserTrainInput
	(*ShowAllocationInput)(nil),  // 11: ShowAllocationInput
	(*ShowAllocationOutput)(nil), // 12: ShowAllocationOutput
	(*UserAllocModifyInput)(nil), // 13: UserAllocModifyInput
}
var file_ticketmaster_proto_depIdxs = []int32{
	4,  // 0: Receipt.user:type_name -> User
	2,  // 1: Receipt.cost:type_name -> Price
	4,  // 2: Seat.allocated_to:type_name -> User
	0,  // 3: Section.name:type_name -> SectionOrder
	6,  // 4: Section.seats:type_name -> Seat
	3,  // 5: Train.trip_detail:type_name -> Trip
	7,  // 6: Train.sections:type_name -> Section
	3,  // 7: BookTicketOutput.trip_detail:type_name -> Trip
	4,  // 8: BookTicketOutput.traveller:type_name -> User
	4,  // 9: UserTrainInput.user:type_name -> User
	0,  // 10: ShowAllocationInput.order:type_name -> SectionOrder
	7,  // 11: ShowAllocationOutput.section_details:type_name -> Section
	10, // 12: UserAllocModifyInput.user_train_details:type_name -> UserTrainInput
	0,  // 13: UserAllocModifyInput.new_section:type_name -> SectionOrder
	5,  // 14: TicketMaster.BookTicket:input_type -> Receipt
	10, // 15: TicketMaster.GetReceipt:input_type -> UserTrainInput
	11, // 16: TicketMaster.ShowAllocations:input_type -> ShowAllocationInput
	10, // 17: TicketMaster.RemoveUser:input_type -> UserTrainInput
	13, // 18: TicketMaster.ModifyUserAllocation:input_type -> UserAllocModifyInput
	9,  // 19: TicketMaster.BookTicket:output_type -> BookTicketOutput
	5,  // 20: TicketMaster.GetReceipt:output_type -> Receipt
	12, // 21: TicketMaster.ShowAllocations:output_type -> ShowAllocationOutput
	1,  // 22: TicketMaster.RemoveUser:output_type -> Empty
	1,  // 23: TicketMaster.ModifyUserAllocation:output_type -> Empty
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_ticketmaster_proto_init() }
func file_ticketmaster_proto_init() {
	if File_ticketmaster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticketmaster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Seat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Train); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTrainInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowAllocationInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowAllocationOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticketmaster_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAllocModifyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticketmaster_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticketmaster_proto_goTypes,
		DependencyIndexes: file_ticketmaster_proto_depIdxs,
		EnumInfos:         file_ticketmaster_proto_enumTypes,
		MessageInfos:      file_ticketmaster_proto_msgTypes,
	}.Build()
	File_ticketmaster_proto = out.File
	file_ticketmaster_proto_rawDesc = nil
	file_ticketmaster_proto_goTypes = nil
	file_ticketmaster_proto_depIdxs = nil
}
